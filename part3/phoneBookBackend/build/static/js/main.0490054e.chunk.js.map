{"version":3,"sources":["components/Filter.js","components/Persons.js","components/PersonForm.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","handleFilterChange","onChange","Persons","personsToShow","deleteName","console","log","map","person","key","id","name","number","onClick","value","PersonForm","handleNameChange","handleNumberChange","addName","type","Notification","notification","messageType","message","className","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filterName","setFilterName","setNotification","useEffect","personsService","initPersons","filter","toLocaleLowerCase","indexOf","event","target","preventDefault","newPerson","personsWithSameName","length","window","confirm","returnPerson","catch","error","setTimeout","concat","result","returnData","toString","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0490054e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({handleFilterChange}) => {\r\n    return (\r\n        <div>filter shown with <input onChange={handleFilterChange} /></div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Persons = ({ personsToShow, deleteName }) => {\r\n    console.log('[Persons comp] personsToShow', personsToShow)\r\n    return (\r\n        <div>\r\n            {personsToShow.map(person =>\r\n                <div key={person.id}>{person.name} {person.number}\r\n                    <button onClick={deleteName} value={person.name} id={person.id}>delete</button>\r\n                </div>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst PersonForm = ({handleNameChange, handleNumberChange, addName}) => {\r\n    return (\r\n        <form>\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>name:</td>\r\n                        <td>\r\n                            <input onChange={handleNameChange} />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>number:</td>\r\n                        <td>\r\n                            <input onChange={handleNumberChange} />\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <div>\r\n                <button type=\"submit\" onClick={addName} >add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Notification = ({notification}) => {\r\n    // console.log('[comp Notification]', notification)\r\n    const { messageType, message } = notification\r\n    // console.log('[comp Notifaction]', messageType, message)\r\n\r\n    if (messageType === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={messageType}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n      const request = axios.get(baseUrl)\r\n      return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deleteName = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, deleteName }","import React, { useState, useEffect } from 'react'\r\n\r\nimport Filter from './components/Filter'\r\nimport Persons from './components/Persons'\r\nimport PersonForm from './components/PersonForm'\r\nimport Notification from './components/Notification'\r\n\r\nimport personsService from './services/persons'\r\n\r\nimport './index.css'\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([])\r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')\r\n    const [filterName, setFilterName] = useState('')\r\n    const [notification, setNotification] = useState({ messageType: null, message: null })\r\n\r\n    useEffect(() => {\r\n        personsService\r\n            .getAll()\r\n            .then(initPersons => {\r\n                // console.log('axios response: ', response);\r\n                setPersons(initPersons)\r\n            })\r\n    }, [])\r\n\r\n    const handleNameChange = (event) => {\r\n        const value = event.target.value\r\n        // console.log(\"state newName: \", value)\r\n        setNewName(value)\r\n    }\r\n\r\n    const handleNumberChange = (event) => {\r\n        const value = event.target.value\r\n        // console.log(\"state newNumber: \", value)\r\n        setNewNumber(value)\r\n    }\r\n\r\n    const handleFilterChange = (event) => {\r\n        const value = event.target.value\r\n        // console.log('state filterName: ', value)\r\n        setFilterName(value)\r\n    }\r\n\r\n    const addName = (event) => {\r\n        event.preventDefault()\r\n\r\n        const newPerson = { name: newName, number: newNumber }\r\n\r\n        const personsWithSameName = persons.filter(person => newName === person.name)\r\n        console.log('same name', personsWithSameName.length)\r\n\r\n        if (personsWithSameName.length !== 0) {\r\n            const result = window.confirm(`${newName} is aleardy added to phonebook, replace the old number with new one?`)\r\n            if (result) {\r\n                const id = personsWithSameName[0].id\r\n                personsService\r\n                    .update(id, newPerson)\r\n                    .then(returnPerson => {\r\n                        setPersons(persons.map(person => id === person.id ? returnPerson : person))\r\n                    })\r\n                    .catch(error => {\r\n                        setNotification(\r\n                            {\r\n                                messageType: 'error',\r\n                                message: `Information of ${newName} has already been removed from server`\r\n                            }\r\n                        )\r\n                        setPersons(persons.filter(person => person.id !== id))\r\n                        setTimeout(() => {\r\n                            setNotification({messageType: null, message: null})\r\n                        }, 5000)\r\n                    })\r\n            }\r\n        } else {\r\n            personsService\r\n                .create(newPerson)\r\n                .then(returnPerson => {\r\n                    setPersons(persons.concat(returnPerson))\r\n                    setNotification(\r\n                        {\r\n                            messageType: 'info',\r\n                            message: `Added ${newPerson.name}`\r\n                        }\r\n                    )\r\n                    setTimeout(() => {\r\n                        setNotification({messageType: null, message: null})\r\n                    }, 2000)\r\n                })\r\n        }\r\n    }\r\n\r\n    const deleteName = (event) => {\r\n        const result = window.confirm(`Delete ${event.target.value} ?`)\r\n        console.log('delete id: ', event.target.id)\r\n\r\n        if (result) {\r\n            const id = event.target.id;\r\n            personsService\r\n                .deleteName(id)\r\n                .then(returnData => {\r\n                    console.log('after delete data', returnData)\r\n                    console.log(persons.filter(person => id !== person.id.toString()))\r\n                    setPersons(persons.filter(person => id !== person.id.toString()))\r\n                })\r\n        }\r\n    }\r\n\r\n    const personsToShow = '' === filterName\r\n        ? persons\r\n        : persons.filter(person => -1 !== person.name.toLocaleLowerCase().indexOf(filterName.toLocaleLowerCase()))\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Notification notification={notification} />\r\n            <Filter handleFilterChange={handleFilterChange} />\r\n            <h2>add a new</h2>\r\n            <PersonForm\r\n                handleNameChange={handleNameChange}\r\n                handleNumberChange={handleNumberChange}\r\n                addName={addName}\r\n            />\r\n            <h2>Numbers</h2>\r\n            <Persons\r\n                personsToShow={personsToShow}\r\n                deleteName={deleteName}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}